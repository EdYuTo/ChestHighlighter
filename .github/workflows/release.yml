name: Release

on:
  push:
    branches:
      - 'main'

jobs:
  release:
    name: Run release
    permissions: 
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dotnet version
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: '3.1.x'

      - name: Install OpenSSL
        run: |
            wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1-1ubuntu2.1~18.04.23_amd64.deb
            sudo dpkg -i libssl1.1_1.1.1-1ubuntu2.1~18.04.23_amd64.deb

      - name: Run build
        run: |
          dotnet publish -c Release -r linux-x64 --self-contained true
      
      - name: Zip build files
        run: |
          mkdir Release
          mv ChestHighlighter/bin/Release/netstandard2.1/linux-x64/publish/ChestHighlighter.dll Release
          mv ChestHighlighter/bin/Release/netstandard2.1/linux-x64/publish/ChestHighlighter.pdb Release
          mv ChestHighlighter/bin/Release/netstandard2.1/linux-x64/publish/ChestHighlighter.deps.json Release
          zip -r Release.zip Release

      - name: Get tag
        id: get_tag
        run: |
          TAG=$(grep -oPm1 "(?<=<Version>)[^<]+" ChestHighlighter/ChestHighlighter.csproj)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          draft: false
          prerelease: false
      
      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Release.zip
          asset_name: Release.zip
          asset_content_type: application/zip
